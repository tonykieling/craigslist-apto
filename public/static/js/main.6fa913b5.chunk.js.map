{"version":3,"sources":["graphics/logo192.png","components/Header.js","components/AppsModal.js","components/tableHelpers/tableHead.js","components/tableHelpers/basicTableLine.js","components/tableHelpers/tableAssembler.js","components/TableMobile.js","components/TableLarge.js","components/helpers/removeItem.js","components/helpers/getItems.js","components/AptosList.js","components/Footer.js","graphics/architecture.png","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","target","rel","src","Logo","alt","title","width","to","customStyle","content","top","bottom","left","right","marginRight","transform","backgroundColor","height","AppsModal","props","info","description","location","price","oldPrice","reactivated","changed","lastUpdate","ariaHideApp","isOpen","openModal","style","showRemoveButton","onClick","closeModal","e","callRemoveItem","head","mobile","type","id","basicTableLine","isMobile","status","colSpan","tableAssembler","data","tableHead","TableMobile","useState","callAppsModal","setCallAppsModal","dataToModal","setDataToModal","useRef","tableIsDone","setTableIsDone","useEffect","length","temp","renderDataTable","tempTable","map","element","i","active","url","window","open","substring","stopPropagation","color","TableLarge","index","reasonRemovedFromAdmin","alert","removeItem","removePass","reason","a","axios","patch","_id","remove","message","error","getItems","get","headers","getData","apartments","innerWidth","AptosList","availables","setAvailables","removedByOwnwer","setRemovedByOwner","removedByAdmin","setRemovedByAdmin","setCloseModal","sortAnswer","aptos","option","filter","Error","console","log","fetchData","item","receivingFromModal","prompt","removeItemByAdmin","newItemToRemovedByAdmin","postId","showRBOTable","setShowRBOTable","showRBATable","setShowRBATable","marginBottom","Footer","About","Architecture","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fa913b5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo192.74b45c28.png\";","import Logo from \"../graphics/logo192.png\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <div className=\"main-header\">\n      <div className=\"header-1\">\n        <a href = \"https://tkwebdev.ca\" target = \"_blank\" rel = \"noreferrer\"\n          className = \"logo\"\n        >\n          <img\n            src   = { Logo }\n            alt   = \"temps\"\n            title = \"Homes\"\n            width = \"100%\"\n          />\n        </a>\n\n        <Link \n          className = \"item\"\n          to        = \"aptosList\" \n        >\n          Check Apartments\n        </Link>\n      </div>\n      <div className = \"header-2\">\n        <Link \n          className = \"item\"\n          to        = \"about\"\n        >\n          About\n        </Link>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Header;","import ReactModal from \"react-modal\";\n\nconst customStyle = {\n  content : {\n    top              : '40%',\n    bottom           : 'auto',\n    left             : '50%',\n    right            : 'auto',\n    marginRight      : '-50%',\n    transform        : 'translate(-50%, -50%)',\n    backgroundColor  : \"lightblue\",\n    height           : \"15rem\",\n    width            : \"80%\"\n  }\n};\n\nconst AppsModal = props => {\n  // console.log(\"props on modalXXX:\", props);\n  const { description, location, price, oldPrice, reactivated, changed, lastUpdate } = props.info;\n\n  return(\n    <ReactModal\n      ariaHideApp ={ false }\n      isOpen  = { props.openModal }\n      style   = { customStyle}\n    >\n      <h2>Posting details</h2>\n      <div> { description }</div>\n      <div>\n        <span className = \"items-modal\">@ <b>{ location }</b> </span>\n      </div>\n      <div>\n        <span> <b>{ price }</b></span>\n      </div>\n      <div>\n        <span> Lat Update at <b>{ lastUpdate ? <b> { lastUpdate } </b> : \"(no info at this time)\" }</b></span>\n      </div>\n      {changed\n        &&\n          <>\n            <div className = \"items-modal\">\n              <span> $ before was <b>{ oldPrice } </b></span>\n            </div>\n          </>\n      }\n      {\n        reactivated &&\n          <>\n            <div className = \"items-modal\">\n              <span> Item <u>reactivated by its owner</u></span>\n            </div>\n          </>\n      }\n\n      <div className = \"buttons-modal\">\n        {props.showRemoveButton\n          ?\n            <>\n              <button \n                className = \"button-close\"\n                onClick = { () => props.closeModal()}>\n                Close\n              </button>\n\n              <button\n                className = \"button-remove\"\n                onClick = { e => props.callRemoveItem(e, props.info, true) }\n              >\n                Remove Item\n              </button>\n            </>\n          :\n            <button\n              className = \"button-close-whole\"\n              onClick = { () => props.closeModal()}>\n              Close\n            </button>\n        }\n      </div>\n    </ReactModal>\n  );\n};\n\nexport default AppsModal;\n\n\n// 20.79\n// Alexandra\n// 2-4% increase each April\n// waiving period \n// Giorgina\n// 267.42\n\n// I will be waiting for your approval so I can communicate my current employer and negotiate with them the period notice.\n// @AcessSignature21","\n/*\n  It receives props to assembly the table head accordingly.\n  props:\n    - mobile\n    - type: a || rbo || tba\n  It returns a line to be inserted into a \n*/\nexport default function head(mobile = false, type = \"a\") {\n  return(\n    <>\n      <thead id = \"color-head\">\n        <tr \n          className = \"tr-first\"\n          key=\"head\"\n        >\n          <th \n            className = \"table-index\"\n          > \n            # \n          </th>\n          <th\n            className = \"table-description\"\n          > \n            Description \n          </th>\n          <th\n            className = \"table-price\"\n          > \n            { mobile ? \"$\" : \"$ Now\"}\n          </th>\n          {mobile && type === \"a\" &&\n            <th\n              className = \"table-more\"\n            > </th>\n          }\n\n          {!mobile &&\n          <>\n            <th\n              className = \"table-price\"\n            > \n              $ Before\n            </th>\n            <th \n              className = \"table-location\"\n            > Location </th>\n            <th\n              className = \"table-reactivated\"\n            > Reactived</th>\n            {type === \"a\" &&\n              <th\n                className = \"table-remove\"\n              > </th>\n            }\n            </>\n          }\n        </tr>\n      </thead>\n    </>\n  );\n}","\n// this is a line that will be placed within a <tbody>\nexport default function basicTableLine(isMobile, status) {\n  return (\n    <tr>\n      <td\n        className = { status === \"processing\" ? \"processing\" : \"tr-empty\"}\n        colSpan   = { isMobile ? 4  : 7}\n      >\n        <b>{ (status === \"processing\") ? \"Processing...\" : \"Empty for now ;)\" }</b>\n      </td>\n    </tr>\n  );\n} ","import tableHead from \"./tableHead.js\";\nimport basicTableLine from \"./basicTableLine\";\n\nconst tableAssembler = (isMobile, type, data) => {\n  return (\n    <table\n      className = { data === \"processing\" ? \"table-no-mouse-cursor\" : \"\"}\n    >\n      { tableHead(isMobile, type) }\n      <tbody>\n        { data === \"processing\"\n            ? basicTableLine(isMobile, \"processing\")\n            : (data === \"empty\")\n              ? basicTableLine(isMobile, \"emptyfornow\")\n              : data\n        }\n      </tbody>\n    </table>\n  );\n}\n\nexport default tableAssembler;","import { useState, useEffect, useRef } from \"react\";\nimport { FaEdit } from \"react-icons/fa\";\nimport AppsModal from \"./AppsModal\";\n\nimport tableAssembler from \"./tableHelpers/tableAssembler\";\n\n\nconst TableMobile = props => {\n  const [ tableHeight, setTableHeight ] = useState(null);\n\n  const [ callAppsModal, setCallAppsModal ] = useState(null);\n  const [ dataToModal, setDataToModal ] = useState(null);\n  const tableReference = useRef(null);\n\n  const [ tableIsDone, setTableIsDone ] = useState(null);\n\n\n  useEffect(() => {\n    //  props.data can be null, 0, or greater than 0\n    if (!props.data) { // it is processing\n      setTableIsDone(tableAssembler(true, props.type, \"processing\"));\n    } else if (props.data.length === 0) { // i is empty\n      setTableIsDone(tableAssembler(true, props.type, \"empty\"));\n    } else if (props.data && props.data.length) { // has data\n      const temp = renderDataTable(props.data);    \n      const tempTable = tableAssembler(true, props.type, temp);\n      setTableIsDone(tempTable);\n    }\n\n    return () => {\n      props.data && renderDataTable();\n    }\n\n    //eslint-disable-next-line\n  }, [props.data]);\n\n\n\n  useEffect(() => {\n    setCallAppsModal(false);\n    //eslint-disable-next-line\n  }, [props.closeModal]);\n\n\n\n  const renderDataTable = () => {\n\n    const newTable = props.data.map((element, i) => {\n      const { description, active, \n        // location, \n        // oldPrice, \n        // reasonRemovedFromAdmin, \n        price, url, reactivated, changed } = element;\n\n      const openModal = () => {\n        setDataToModal(element);\n        setCallAppsModal(true);        \n      };\n\n      return (\n        <tr\n          className = \"tr-table\"\n          key={i}\n          onClick = {() => active \n                          ? window.open(url, \"_blank\") \n                          // : reasonRemovedFromAdmin && window.alert(`\\nAdmin's Reason for removing is:\\n\\n${reasonRemovedFromAdmin}`)}\n                          : openModal()\n                    }\n                            \n        >\n          <td className = \"table-index\"> {i + 1} </td>\n          <td \n            className = {`table-description ${ reactivated || changed ? \"tr-orange\" : \"asd\"}`}\n          > \n            { description.length > 20 ? `${description.substring(0, 19)}..` : description} \n          </td>\n          <td className = \"table-price\">{price.substring(1, 8)}</td>\n\n          { props.type === \"a\" &&\n              <td \n                className = \"table-remove\"\n                onClick = {e => {\n                  e.stopPropagation();\n                  setDataToModal(element)\n                  setCallAppsModal(true);\n                }}\n              >\n                <FaEdit \n                  color = \"blue\" \n                  className=\"table-trash\"\n                />\n              </td>\n          }\n        </tr>\n      );\n    });\n\n    return newTable;\n  };\n\n\n\n  return(\n    <>\n      {callAppsModal &&\n        <AppsModal\n          openModal   = { callAppsModal }\n          closeModal  = { () => setCallAppsModal(false) }\n          info        = { dataToModal }\n          callRemoveItem = { props.callRemoveItem }\n          showRemoveButton = { props.type === \"a\" ? true : false }\n        />\n      }\n\n      { tableIsDone }\n    </>\n  );\n};\n\nexport default TableMobile;","import { useState, useEffect, useRef } from \"react\";\n\nimport AppsModal from \"./AppsModal\";\nimport { FaTrash } from \"react-icons/fa\";\n\nimport tableAssembler from \"./tableHelpers/tableAssembler\";\n\n\nconst TableLarge = props => {\n  const [ callAppsModal, setCallAppsModal ] = useState(null);\n  const [ dataToModal, setDataToModal ] = useState(null);\n  const [ tableIsDone, setTableIsDone ] = useState(null);\n\n  useEffect(() => {\n    //  props.data can be null, 0, or greater than 0\n    if (!props.data) // it is processing\n      setTableIsDone(tableAssembler(false, props.type, \"processing\"));\n\n    else if (props.data.length === 0) // i is empty\n      setTableIsDone(tableAssembler(false, props.type, \"empty\"));\n\n    else if (props.data && props.data.length) { // has data\n      const temp = renderDataTable(props.data);    \n      const tempTable = tableAssembler(false, props.type, temp);\n      setTableIsDone(tempTable);\n    }\n\n    return () => {\n      props.data && renderDataTable();\n    }\n\n    //eslint-disable-next-line\n  }, [props.data]);\n\n\n\n  useEffect(() => {\n    setCallAppsModal(false);\n    //eslint-disable-next-line\n  }, [props.closeModal]);\n\n\n\n  const renderDataTable = () => {\n\n    const newTable = props.data.map((element, index) => {\n      const {description, location, price, oldPrice, url, active, reactivated, reasonRemovedFromAdmin, changed} = element;\n      const tempTableCurrent = (\n        <tr \n          key={index} \n          className = { active ? \"tr-table tr-hover\" : \"tr-table\" }\n          onClick={()=> active \n                          ? window.open(url, \"_blank\") \n                          : reasonRemovedFromAdmin && window.alert(`\\nAdmin's Reason for removing is:\\n\\n${reasonRemovedFromAdmin}`)}\n        >\n          <td\n            className = \"table-index\"\n          >\n            { index + 1 }\n          </td>\n          <td\n            className = {`table-description ${ reactivated || changed ? \"tr-orange\" : \"asd\"}`}\n          >\n            { description.length > 60 ? `${description.substring(0, 59)}..` : description}\n          </td>\n          <td\n            className = \"table-price\"\n          >\n            { price }\n          </td>\n          <td\n            className = \"table-price\"\n          >\n            { oldPrice }\n          </td>\n          <td\n            className = \"table-location\"\n          >\n            { location }\n          </td>\n          <td\n            className = \"table-reactivated\"\n          >\n            { reactivated && <b> &#10003; </b> }\n          </td>\n          {active &&\n            <td \n              className = \"table-remove\"\n              onClick = {e => props.callRemoveItem(e, element)}\n            >\n              <FaTrash \n                color = \"red\" \n                className=\"table-trash\"\n              />\n            </td>\n          }\n        </tr>\n      );\n      return (tempTableCurrent);\n    });\n    return(newTable);\n  };\n\n\n\n  return(\n    <>\n      {callAppsModal &&\n        <AppsModal\n          openModal   = { callAppsModal }\n          closeModal  = { () => setCallAppsModal(false) }\n          info        = { dataToModal }\n          callRemoveItem = { props.callRemoveItem }\n          showRemoveButton = { props.type === \"a\" ? true : false }\n        />\n      }\n\n      { tableIsDone }\n    </>\n  );\n};\n\nexport default TableLarge;","import axios from \"axios\";\n\nconst removeItem = async (id, removePass, reason) => {\n  // console.log(\"inside remove function: \", id, removePass, reason);\n\n  const url = \"/api\";\n  try {\n\n    // const remove = await new Promise((resolve, reject) => {\n    //   setTimeout(() => {\n    //     resolve({\n    //       data: {\n    //         message: \"OKkkkkkkkk\"\n    //       }}\n    //     );\n    //   }, 300);\n    // });\n\n    const remove = await axios\n      .patch(\n          url,\n          {\n              removePass,\n              reason,\n              _id: id\n            }\n          );\n//  console.log(\"removeeeeeeeeeeeee\", remove);\n      if (!remove.data.message) {\n        throw(remove.data.error);\n      }\n\n      return ({message: true});\n\n  } catch(error) {\n    return ({error: error.message || error});\n  }\n}\n\nexport default removeItem;","import axios from \"axios\";\n\nconst tempDB =  [\n  {\n    postId: '7388747820',\n    url: 'https://vancouver.craigslist.org/bnc/apa/d/burnaby-bedroom-on-26th-floor-in/7388747820.html',\n    description: '1 Bedroom on 26th floor in Station Square',\n    price: '$1,780',\n    active: true,\n    location: \"Joyce\",\n    _id: 1\n  },\n  {\n    postId: '7388747820',\n    url: 'https://vancouver.craigslist.org/bnc/apa/d/burnaby-bedroom-on-26th-floor-in/7388747820.html',\n    description: '1 Bedroom on 26th floor in Station Square',\n    price: '$1,780',\n    active: true,\n    location: \"Joyce\",\n    reactivated: true,\n    oldPrice: \"$1888\",\n    _id: 2\n  },\n  {\n    postId: '7388747820',\n    url: 'https://vancouver.craigslist.org/bnc/apa/d/burnaby-bedroom-on-26th-floor-in/7388747820.html',\n    description: '1 Bedroom on 26th floor in Station Square',\n    price: '$1,780',\n    active: true,\n    location: \"Joyce\",\n    _id: 3\n  },\n  {\n    postId: '7380919502',\n    url: 'https://vancouver.craigslist.org/bnc/apa/d/burnaby-spacious-1br-with-balcony-in/7380919502.html',\n    description: 'Spacious 1br with Balcony in Metrotown area',\n    price: '$1,765',\n    active: true,\n    location: \"Patterson\",\n    _id: 4\n  },\n  {\n    postId: '7380919503',\n    url: 'https://vancouver.craigslist.org/bnc/apa/d/burnaby-spacious-1br-with-balcony-in/7380919502.html',\n    description: 'Spacious 1br with Balcony in Metrotown area',\n    price: '$1,765',\n    active: false,\n    location: \"Patterson\",\n    _id: 5\n  },\n  // {\n  //   postId: '7380919325',\n  //   url: 'https://vancouver.craigslist.org/bnc/apa/d/burnaby-spacious-studio-with-great-views/7380919325.html',\n  //   description: 'Spacious - STUDIO - WITH GREAT VIEWS',\n  //   price: '$1,650',\n  //   active: false,\n  //   location: \"Joyce\",\n  //   removedByAdmin: true,\n  //   reasonRemovedFromAdmin: \"test\",\n  //   _id: 6\n  // }\n];\n\nconst getItems = async () => {\n  // console.log(\"inside remove function: \", id, removePass, reason);\n\n  const url = \"/api\";\n  try {\n\n    // const getData = await new Promise((resolve, reject) => {\n    //   setTimeout(() => {\n    //     resolve({\n    //       data: {\n    //         apartments: tempDB\n    //       }}\n    //     );\n    //   }, 1000);\n    // });\n\n    const getData = await axios.get( \n      url,\n      {  \n        headers: { \n          \"Content-Type\": \"application/json\"\n        }\n    });\n\n//  console.log(\"getDataaaaaaa\", getData);\n      if (!getData.data.apartments) {\n        throw(getData.data.error);\n      }\n\n      return ({ message: getData.data.apartments });\n\n  } catch(error) {\n    return ({error: error.message || error});\n  }\n}\n\nexport default getItems;","import { useState, useEffect } from \"react\";\nimport TableMobile from \"./TableMobile.js\";\nimport TableLarge from \"./TableLarge.js\";\nimport removeItem from \"./helpers/removeItem.js\";\nimport getItems from \"./helpers/getItems.js\";\n\nimport { BiCollapse } from \"react-icons/bi\";\nimport { BiExpand } from \"react-icons/bi\";\n\n\n\nconst mobile = window.innerWidth < 768 ? true : false;\n\n\nfunction AptosList() {\n  const [availables, setAvailables] = useState(null);\n  const [removedByOwnwer, setRemovedByOwner] = useState(null);\n  const [removedByAdmin, setRemovedByAdmin] = useState(null);\n\n  const [ closeModal, setCloseModal ] = useState(false);\n\n\n  const sortAnswer = (aptos, option = false) => {\n    if (!option) {\n      setAvailables([...aptos.filter(e => e.active)]);\n\n      setRemovedByOwner([...aptos.filter(e => !e.active && !e.removedByAdmin)]);\n\n      setRemovedByAdmin([...aptos.filter(e => e.removedByAdmin)]);\n    } else {\n      // it will happen only when admin removes an ad\n      setRemovedByAdmin([...aptos.filter(e => e.removedByAdmin)]);\n    }\n  };\n\n\n\n  useEffect(() => {\n\n    const fetchData = async() => {\n  \n      try {\n\n        const getData = await getItems();\n        if (getData.message) {\n          sortAnswer(getData.message);\n\n        } else\n          throw new Error(getData.error);\n          \n        } catch (error) {\n          console.log(\"### error post\", error.message);\n        } finally {\n          // setTableNoMouse(false);\n        }\n    }\n\n    fetchData();\n    // return () => {\n    //   setProducts({});\n    //   setDataTable({});\n    //   setMessage(\"\");\n    //   setCallEditModal(\"\");\n    //   setProductToEdit(\"\");\n    // };\n    //eslint-disable-next-line\n  }, []);\n\n\n\n  const callRemoveItem = async (e, item, receivingFromModal) => {\n    console.log(\"=========\", e, item, receivingFromModal);\n    e.stopPropagation()\n    const removePass = window.prompt(\"\\nPlease confirm remove action with password\");\n\n    if (!removePass) return;\n\n    let reason = \"\";\n    while (!reason)\n      reason = window.prompt(\"\\n Short reason, please ;)\");\n    \n    try {\n      const removeItemByAdmin = await removeItem(item._id, removePass, reason);\n                \n      if (removeItemByAdmin.error) {\n        throw(removeItemByAdmin.error);\n      }\n          \n      // updateAvailables\n      setAvailables([...availables.filter(e => item._id !== e._id)]);\n          \n      // updateRemovedByAdmins\n      const newItemToRemovedByAdmin = {\n        postId    : item.postId,\n        url       : item.url,\n        price     : item.price,\n        oldPrice  : item.oldPrice,\n        active    : false,\n        description : item.description,\n        location    : item.location,\n        reasonRemovedFromAdmin: reason\n      }\n      setRemovedByAdmin([...removedByAdmin, newItemToRemovedByAdmin]);\n\n      if (receivingFromModal)\n        setCloseModal(true);\n\n      window.alert(\"Item removed by Admin successfully. :)\");\n\n\n    } catch(error) {\n      window.alert(`\\nError: ${error}\\n\\nTry again ;)`);\n    } finally {\n      // setTableNoMouse(false);\n    }\n\n  };\n\n\n  const [ showRBOTable, setShowRBOTable ] = useState(false);\n  const [ showRBATable, setShowRBATable ] = useState(false);\n\n\n\n  return (\n    <div className=\"app-body\">\n      <h1>List of apartments</h1>\n\n\n\n      {/* Availables table title */}\n      <div \n        className = \"table-section-title av\"\n      >\n        Availables\n      </div>\n      {/* here's a trick to get no mouse events and be able to set the cursor, \n          which is wrapping the cursor first and after setting the event's mouse */}\n        { mobile\n          ?\n            <TableMobile \n              data = { availables } \n              type = \"a\"\n              callRemoveItem = { callRemoveItem }\n              closeModal = { closeModal }\n            />\n          :  \n            <TableLarge\n              data = { availables}\n              type = \"a\"\n              callRemoveItem = { callRemoveItem }\n              closeModal = { closeModal }\n            />\n        }\n\n\n\n      {/* Removed by Owners table title */}\n      <div \n        className = \"table-section-title rbo\"\n      >\n        Removed by Owners\n        { showRBOTable\n          ? <BiCollapse\n              className = \"table-ExpCol expCol-blue\"\n              onClick = {() => setShowRBOTable(false)}\n            />\n          : <BiExpand\n              className = \"table-ExpCol expCol-green\"\n              onClick = {() => setShowRBOTable(true)}\n            />\n        }\n      </div>\n\n      { showRBOTable\n        ?\n          mobile\n            ?\n              <TableMobile \n                data = { removedByOwnwer } type = \"rbo\"\n                closeModal = { closeModal }\n              />\n            :  \n              <TableLarge\n                data = { removedByOwnwer }\n                type = \"rbo\"\n                closeModal = { closeModal }\n              />\n        : <table></table>\n      }\n\n\n      {/* Removed by Admins table title */}\n      <div \n        className = \"table-section-title rba\"\n      >\n        Removed by Admins\n        { showRBATable\n          ? <BiCollapse \n              className = \"table-ExpCol expCol-blue\"\n              onClick = {() => setShowRBATable(false)}\n            />\n          : <BiExpand \n              className = \"table-ExpCol expCol-green\" \n              onClick = {() => setShowRBATable(true)}\n            />\n        }\n      </div>\n\n      { showRBATable\n        ?\n          mobile\n            ?\n              <TableMobile \n                data = { removedByAdmin } type = \"rba\"\n                closeModal = { closeModal }\n              />\n            :  \n              <TableLarge\n                data = { removedByAdmin }\n                type = \"rba\"\n                closeModal = { closeModal }\n              />\n        : <table></table>\n      }\n\n      <div style={{marginBottom: \"2rem\"}}></div>\n    </div>\n  );\n}\n\nexport default AptosList;\n","\nexport default function Footer(){\n  return (\n    <div className=\"signature\">\n      Tony Kieling<span>&nbsp;™️ &nbsp;–&nbsp;  2021</span>\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/architecture.5ca3aa39.png\";","import Architecture from \"../graphics/architecture.png\";\n\nfunction About() {\n  return (\n    <div className=\"app-body\">\n      <h2>Home Seeker</h2>\n\n      <h3 className = \"h3-about\">What is it?</h3>\n      <p className = \"p-about\">Home seeker is a system that helps you look for a new home that suits your needs. </p>\n\n      <h3 className = \"h3-about\">How does it work?</h3>\n      <p className = \"p-about\">Tired of checking craigslist multiple times a day or missing opportunities for a dream home? We were too!  </p>\n      <p className = \"p-about\">Home seeker gets this tiring part of the search out of your hands.</p>\n      <p className = \"p-about\">You just need to define your criteria: location, budget. then the system will check on all inputs on craigslist and send you the available places directly to your personal email. Then you just click on the link and it will connect you to the craigslist ad.</p>\n      {/* <p className = \"p-about\">First of all, my wife and I go to craigslist and set the criterias we desire, such as location and price. We cand have how many as we want. Let's say we define more than one place and different range prices, that's okay.</p>\n      <p className = \"p-about\">Each of those criterias are inputed in the system.</p>\n      <p className = \"p-about\">The system runs and all queries are trigged.</p>\n      <p className = \"p-about\">Its results are parsed and compared against the database data.</p>\n      <p className = \"p-about\">If it is a new item, it will be recorded in the database and later it will be compared with new data and checked if its price was changed, if the post's owner deleted it.</p>\n      <p className = \"p-about\">When there is a change (new or update data), the system emails the Home seeker's  adminsitrators (my wife and I) with the new information.</p>\n      <p className = \"p-about\">Also, there is a client side, for both web and mobile, that allows anyone see which apartments are available, removed by owners, or removed by the administrators.</p>\n      <p className = \"p-about\">Yes, the system allows the administrators to remove the item. It is protected by a secret and it needs a reason to be performed.</p> */}\n\n      <h3 className = \"h3-about\">When does it happens?</h3>\n      <p className = \"p-about\">The queries are executed from morning to late evening each 30 minutes. It uses a schedule provided by GitHub Actions.</p>\n      <p className = \"p-about\">Also, it is possible to execute a post request, with a secret, that will execute the queries, compare data and record new information in database.</p>\n      <p className = \"p-about\">The client side can be executed at any time.</p>\n\n      <h3 className = \"h3-about\">Architecture</h3>\n      <p className = \"p-about\">1- Server is running on web (Vercel).</p>\n      <p className = \"p-about\">2- A crontab at github action will trigger the system each 30 minutes, between 7am to 9pm (personal definition).</p>\n      <p className = \"p-about\">3- The server receives the post request, goes to craigslist; Simultaneously, it queries the database. After receiving both results, it compares the array of data and check 1) what is a new item, 2) what was changed and 3) what was deleted by the owner.</p>\n      <p className = \"p-about\">4- After comparing the data currently recorded on database with the data received from craiglist, if any changes, it will email the Home seeker's adminstrator.</p>\n      <p className = \"p-about\">5- The users may access the system via web and check all registeres and their status. It is possible to remove an undesired item.</p>\n      <p className = \"p-about\">* There are 3 possible status for each item recorded:</p>\n      <p className = \"p-about\">a- Available,</p>\n      <p className = \"p-about\">b- Removed by Owners, it happens when the post's owners remove them,</p>\n      <p className = \"p-about\">c- Removed by Admins, when the admins decide the item is not suitable and it will not be shown on available table.</p>\n      <p className = \"p-about\">* One item can be removed by its owner and afterwards they want them back on craiglist. The system will detect this action and mark the item as available and reactivated.</p>\n\n      <h3 className = \"h3-about\">Step-by-step on an image</h3>\n      <p className = \"p-about\">1- Github Action triggers a post request to the server.</p>\n      <p className = \"p-about\">2- Server receives the post request and queries Craigslist and Atlas MongoDB.</p>\n      <p className = \"p-about\">3- Server receives the results and compares than.</p>\n      <p className = \"p-about\">4- If any update or new item, the system emails the adminsitrators.</p>\n      <p className = \"p-about\">5- Users or Administrators may request to check the items; Optionally, the admins can remove ads. This is usefull to keep the availables items clean, showing only the desired ones.</p>\n\n      <div className = \"position-img-about\">\n        <img\n          src = { Architecture }\n          alt = \"shows the architecture\"\n          className = \"img-about\"\n        />\n      </div>\n\n\n      <h3 className = \"h3-about\">Tech stack</h3>\n      <p className = \"p-about\">Node.js, React, Atlas MongoDB, HTML, CSS, Axios, Node-fetch, React-icons, Node-Mailer, and React-Modal.</p>\n\n      <div className = \"last-div-about\">\n        <p className = \"last-p-about\">Please, feel free to reach out in case any doubts or contribuitions. ;) </p>\n        <p className = \"last-p-about\">\n          Find this project on \n          <a href = \"https://github.com/tonykieling/craigslist-apto\" target = \"_blank\" rel = \"noreferrer\"> GitHub</a>\n        </p>\n        <p className = \"last-p-about\">\n          <a href = \"https://tkwebdev.ca\" target = \"_blank\" rel = \"noreferrer\">https://tkwebdev.ca</a>\n        </p>\n        \n\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Header from \"./components/Header.js\";\nimport AptosList from \"./components/AptosList.js\";\nimport Footer from \"./components/Footer.js\";\nimport About from \"./components/About\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path = \"/aptosList\">\n          <AptosList />\n        </Route>\n\n        <Route exact path = \"/about\">\n          <About />\n        </Route>\n      </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}